[1mdiff --git a/www/assets/js/cframework.js b/www/assets/js/cframework.js[m
[1mindex 69f280f..0923cea 100644[m
[1m--- a/www/assets/js/cframework.js[m
[1m+++ b/www/assets/js/cframework.js[m
[36m@@ -76,33 +76,35 @@[m [mclass CFramework {[m
     this._checkInit();[m
     [m
     try {[m
[31m-      const response = await fetch(`${this.config.serverUrl}/auth/login`, {[m
[32m+[m[32m      const response = await fetch(`${this.config.serverUrl}/api/function`, {[m
         method: 'POST',[m
         headers: { 'Content-Type': 'application/json' },[m
[31m-        body: JSON.stringify({ email, password })[m
[32m+[m[32m        body: JSON.stringify({ action: 'auth.login', payload: { email, password } })[m
       });[m
       [m
       const result = await response.json();[m
       [m
[32m+[m[32m      if (result.success && result.data && result.data.success) {[m
[32m+[m[32m        // Store session manually for cross-domain requests[m
[32m+[m[32m        this.session = result.data.session_token;[m
[32m+[m[32m        this.user = {[m
[32m+[m[32m          user_id: result.data.userId,[m
[32m+[m[32m          email: result.data.user.email,[m
[32m+[m[32m          name: result.data.user.name || email.split('@')[0],[m
[32m+[m[32m          expires: result.data.expires[m
[32m+[m[32m        };[m
         [m
[31m-        if (result.success) {[m
[31m-          // Store session manually for cross-domain requests[m
[31m-          this.session = result.session_token;[m
[31m-          this.user = {[m
[31m-            user_id: result.userId,[m
[31m-            email: result.email,[m
[31m-            name: result.name || email.split('@')[0],[m
[31m-            expires: result.expires[m
[31m-          };[m
[31m-          [m
[31m-          localStorage.setItem(this.config.sessionKey, this.session);[m
[31m-          localStorage.setItem(this.config.userKey, JSON.stringify(this.user));[m
[31m-          [m
[32m+[m[32m        localStorage.setItem(this.config.sessionKey, this.session);[m
[32m+[m[32m        localStorage.setItem(this.config.userKey, JSON.stringify(this.user));[m
           [m
[31m-          this._log('Login successful', { email, userId: result.userId });[m
[31m-        }[m
[31m-      [m
[31m-      return result;[m
[32m+[m[32m        this._log('Login successful', { email, userId: result.data.userId });[m
[32m+[m[32m        return result;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Login failed[m
[32m+[m[32m        const errorMessage = result.data?.error || result.error?.message || 'Login failed';[m
[32m+[m[32m        this._log('Login failed', { error: errorMessage });[m
[32m+[m[32m        throw new Error(errorMessage);[m
[32m+[m[32m      }[m
       [m
     } catch (error) {[m
       this._log('Login failed', error);[m
